%YAML 1.1
--- 
StructureVersion: "1.0"
Properties: 
  RUID: 157829256_1001777637
  Name: "import_Mcard_auto"
  Caption: "import_Mcard_auto"
  Version: "1.0.0.2"
  Optional: False
  Internal: True
  MD5: E04C48F1B85E4246F0E1B533958D9A23
Objects: 
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 157829244_1001777637
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 157829243_1001777637
    Fields: 
      NAME: "import_Mcard_Auto"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2018-04-23T09:08:29+03:00
      DISPLAYSCRIPT: | 
        IMPORT_MCARD_AUTO
        IMPORT_MCARD_AUTO_EXCEPT
        ADD_INFOJORNAL
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QJAAAAT1dORVJGT1JNCQAAAE9XTkVSRk9STQAAAAAAAAAAAAAAAAsAAAAAAAAAAAAA
        AABGTlNUUFJTVAwAAABEQVRBQkFTRVBBVEgMAAAAREFUQUJBU0VQQVRIAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEZOU1RQUlNUCQAAAERBVEVCRUdJTgkAAABEQVRFQkVHSU4AAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAARk5TVFBSU1QHAAAAREFURUVORAcAAABEQVRFRU5EAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEZOU1RQUlNUBQAAAEtOVU1CBQAAAEtOVU1CAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAEZOU1RGTFBS
      SCRIPT: | 
        Option Explicit
        Sub import_Mcard_Auto(OwnerForm, DataBasePath, Datebegin, Dateend, KNumb)
          dim Creator
          set Creator = new TCreator
        
          dim LogInfo
          ' БД кассы
          dim Database
          set Database = Creator.GetObject(nil, "TIBDatabase", "")
        
          ' удаленная транзакция (на базе кассы)
          dim Transaction
          set Transaction = Creator.GetObject(nil, "TIBTransaction", "")
          Transaction.Params.Add("nowait")
          Transaction.Params.Add("read_committed")
          Transaction.Params.Add("rec_version")
        
          ' локальная транзакция
          dim OurTransaction
          set OurTransaction = Creator.GetObject(nil, "TIBTransaction", "")
          OurTransaction.Params.Add("nowait")
          OurTransaction.DefaultDatabase = gdcBaseManager.Database
          OurTransaction.StartTransaction
        
          except import_Mcard_Auto_Except(Transaction, OurTransaction)
        
          if DataBasePath = "" then
            if OurTransaction.InTransaction then OurTransaction.RollBack
              LogInfo ="Не задан путь к кассе!" & CSTR(KNumb) & " Внимание"
            call ADD_INFOJORNAL(Creator, LogInfo)
            exit sub
          end if
        
          ' пытаемся подключиться к БД кассы
          Database.DatabaseName = DataBasePath
          Database.DefaultTransaction = Transaction
          Database.Params.Add("user_name=SYSDBA")
          Database.Params.Add("password=masterkey")
          Database.Params.Add("lc_ctype=win1251")
          Database.LoginPrompt = False
        
          Err.Clear
          ON ERROR RESUME NEXT
          Database.Open
          if Err.Number <> 0 then
            LogInfo = "Невозможно подключиться к удаленной базе!"  & CSTR(KNumb) & " Внимание"
            call ADD_INFOJORNAL(Creator, LogInfo)
            Exit sub
          end if
          if not Transaction.InTransaction then
            Transaction.StartTransaction
          end if
        
          ' на базе КС находим ИД типов чека "Продажа" и "Возврат"
          ' (только чеки этих типов имеют значение и должны быть импортированы)
          dim CheckTypeSaleKey, CheckTypeReturnKey, CardTypeKey
          dim qCheckType
          set qCheckType = Creator.GetObject(nil, "TIBSQL", "")
          qCheckType.Transaction = Transaction
          qCheckType.SQL.Text = "SELECT ID FROM GD_RUID WHERE XID = :CheckTypeXID AND DBID = :CheckTypeDBID "
          qCheckType.ParamByName("CheckTypeXID").AsInteger = 147004173
          qCheckType.ParamByName("CheckTypeDBID").AsInteger = 818830148
          qCheckType.ExecQuery
          CheckTypeSaleKey = qCheckType.FieldByName("ID").AsInteger
          qCheckType.Close
        
          qCheckType.ParamByName("CheckTypeXID").AsInteger = 147004174
          qCheckType.ParamByName("CheckTypeDBID").AsInteger = 818830148
          qCheckType.ExecQuery
          CheckTypeReturnKey = qCheckType.FieldByName("ID").AsInteger
          qCheckType.Close
        
          if CheckTypeReturnKey = 0 or CheckTypeSaleKey = 0 then
            if Transaction.InTransaction then Transaction.Rollback
            if OurTransaction.InTransaction then OurTransaction.Rollback
            exit sub
          end if
        
          dim qSale, FieldSize, SizeTable, qTemp, qTempDel
          ' наличие записей по указанным данным за период
          set qTemp = Creator.GetObject(nil, "TIBSQL", "")
          qTemp.Transaction = OurTransaction
          qTemp.SQL.Text = _
            " SELECT " & _
            "  * " & _
            " FROM USR$TEMP_MONTHCARD_CHECKSUM T " & _
            " WHERE (T.USR$DATEBEGIN >= :BD OR T.USR$DATEEND <= :ED) " & _
            " AND T.USR$KASSA = :KASSA "
          qTemp.ParamByName("BD").asDateTime = Datebegin
          qTemp.ParamByName("ED").asDateTime = Dateend
          qTemp.ParamByName("KASSA").asInteger = KNumb
          qTemp.ExecQuery
        
          set qTempDel = Creator.GetObject(nil, "TIBSQL", "")
          qTempDel.Transaction = OurTransaction
          qTempDel.SQL.Text = _
            " DELETE " & _
            " FROM USR$TEMP_MONTHCARD_CHECKSUM T " & _
            " WHERE (T.USR$DATEBEGIN >= :BD AND T.USR$DATEEND <= :ED) " & _
            " AND T.USR$KASSA = :KASSA "
        
        
          IF NOT qTemp.EOF THEN
            LogInfo = "По указанным параметрам в таблице есть сохраненные данные. Касса " & CSTR(KNumb) & _
              "за период с " & CSTR(Datebegin) & " по " & CSTR(Dateend) & ". Импорт остановлен. "
            call ADD_INFOJORNAL(Creator, LogInfo)
            EXIT SUB
          END IF
        
        
        
          set qSale = Creator.GetObject(nil, "TIBSQL", "")
          qSale.Transaction = Transaction
          qSale.SQL.Text = _
            "SELECT " & _
            "CH.USR$MCARDKEY, " & _
            "mcard.XID as mC_xID, " & _
            "mcard.DBID as mC_DBID, " & _
            "SUM(L.USR$SUMDISCOUNT) AS SUMDISCOUNT, " & _
            "SUM(L.USR$SUMWITHDISCOUNT) AS SUMWHITHDISC, " & _
            "SUM(IIF(L.USR$SUMDISCOUNT=0,0,L.USR$SUMWITHDISCOUNT)) AS SUMFORCARD " & _
            " " & _
            "FROM USR$PF_CHECK CH " & _
            "JOIN USR$PF_CHECKLINE L ON L.USR$MASTERKEY = CH.ID " & _
            "LEFT JOIN USR$PF_GETRUID(CH.USR$MCARDKEY) mcard ON 1 = 1 " & _
            "LEFT JOIN USR$PF_MONTHCARD M on m.ID = CH.USR$MCARDKEY " & _
            "WHERE CH.USR$DATE BETWEEN :DB AND :DE " & _
            "AND NOT CH.USR$MCARDKEY IS NULL and COALESCE(M.USR$ACTIVE,0)=1 " & _
            " AND ch.USR$CHECKKEY IN (" & CheckTypeSaleKey & ", " & CheckTypeReturnKey & ") " & _
            "GROUP BY 1,2,3"
          Err.Clear
          on error resume next
          qSale.ParamByName("DB").asDateTime = Datebegin
          qSale.ParamByName("DE").asDateTime = Dateend
          qSale.ExecQuery
          if Err.Number <> 0 then
              LogInfo = "Невозможно получить продажи на удаленной базе!"  + _
                VBCr + Err.Description + VBCr + _
                "Возможно, на базе не стоят нужные настройки. Внимание!"
              call ADD_INFOJORNAL(Creator, LogInfo)
              if Transaction.InTransaction then Transaction.Rollback
              if OurTransaction.InTransaction then OurTransaction.Rollback
             exit sub
           end if
          on error goto 0
        
          if qSale.EoF then
            LogInfo = "Продажи отсутствуют за период с " & CSTR(Datebegin) & " по " & CSTR(Dateend)
            call ADD_INFOJORNAL(Creator, LogInfo)
            if Transaction.InTransaction then Transaction.Rollback
            if OurTransaction.InTransaction then OurTransaction.Rollback
            exit sub
          end if
        
          dim mCard
          set mCard = Creator.GetObject(nil, "TIBSQL", "")
          mCard.Transaction = OurTransaction
          mCard.SQL.Text = "SELECT ID FROM GD_RUID WHERE XID = :mCardXID AND DBID = :mCardDBID "
        
        
          dim gdcSale
          set gdcSale = Creator.GetObject(nil, "TgdcAttrUserDefined", "")
          gdcSale.Transaction = OurTransaction
          gdcSale.ReadTransaction = OurTransaction
          gdcSale.SubType = "USR$TEMP_MONTHCARD_CHECKSUM"
          gdcSale.Open
          if KNumb<=0 Then
            KNumb = 99
          end if
          while not qSale.EoF
              gdcSale.Append
              gdcSale.FieldByName("USR$SUMCHECK").AsCurrency = qSale.FieldByName("SUMWHITHDISC").AsCurrency
              gdcSale.FieldByName("USR$SUMFORCARD").AsCurrency = qSale.FieldByName("SUMFORCARD").AsCurrency
              gdcSale.FieldByName("USR$SUMDISCONT").AsCurrency = qSale.FieldByName("SUMDISCOUNT").AsCurrency
              gdcSale.FieldByName("USR$Datebegin").AsDateTime = Datebegin
              gdcSale.FieldByName("USR$DATEEND").AsDateTime = Dateend
              gdcSale.FieldByName("USR$KASSA").AsInteger = KNumb
                mCard.Close
                mCard.ParamByName("mCardXID").AsInteger = qSale.FieldByName("mC_xID").AsInteger
                mCard.ParamByName("mCardDBID").AsInteger = qSale.FieldByName("mC_dbID").AsInteger
                mCard.ExecQuery
              if not mCard.EOF Then
                gdcSale.FieldByName("USR$MCARDKEY").AsInteger = mCard.FieldByName("ID").AsInteger
              end if
              gdcSale.Post
              qSale.Next
          wend
          if Transaction.InTransaction then Transaction.Commit
          if OurTransaction.InTransaction then OurTransaction.Commit
            LogInfo = "Загрузка завершена! Внимание!"
            call ADD_INFOJORNAL(Creator, LogInfo)
        End Sub
        sub import_Mcard_Auto_Except(Transaction, OurTransaction)
          if Transaction.InTransaction then Transaction.Rollback
          if OurTransaction.InTransaction then OurTransaction.Rollback
        end sub
        
        SUB ADD_INFOJORNAL(Creator, INF)
          ' локальная транзакция
          dim TR
          set TR = Creator.GetObject(nil, "TIBTransaction", "")
          TR.Params.Add("nowait")
          TR.DefaultDatabase = gdcBaseManager.Database
          TR.StartTransaction
        
          Dim qGenID
          Set qGenID = Creator.GetObject(nil, "TIBSQL", "")
          qGenID.Transaction = Tr
          qGenID.SQL.Text = _
            "SELECT " & _
            "GEN_ID(gd_g_unique, 1) + GEN_ID(gd_g_offset, 0) AS NewID, " & _
            "COM.FULLNAME AS COMPANYNAME " & _
            "FROM RDB$DATABASE " & _
            "LEFT JOIN GD_COMPANY COM  ON COM.CONTACTKEY = :companykey " & _
            "GROUP BY 1,2 "
          qGenID.ParamByName("companykey").asInteger = IBLogin.CompanyKey
          qGenID.ExecQuery
        
          dim upSQL
          set upSQL = Creator.GetObject(nil, "TIBSQL", "")
          upSQL.Transaction = Tr
          upSQL.SQL.Text = _
          "INSERT INTO USR$TEMP_WEBINFO(ID,EDITORKEY,DISABLED,EDITIONDATE,USR$DATA,USR$ISSENDER,USR$COMPANY) " & _
          "  VALUES(:ID,650002,0,:OPERATIONDATE,:ADDINFO,0,:COMPANY) "
          upSQL.ParamByName("ID").asVariant = qGenID.FieldByName("NewID").AsInteger
          upSQL.ParamByName("OPERATIONDATE").asDateTime = now
          upSQL.ParamByName("ADDINFO").asVariant =INF
          upSQL.ParamByName("COMPANY").asVariant = qGenID.FieldByName("COMPANYNAME").AsVariant
          upSQL.ExecQuery
        
          if TR.inTransaction then TR.Commit
          
        END SUB
        
        
        
        
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 157829243_1001777637
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "import_Mcard_autoInit"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2018-04-23T09:07:44+03:00
      DISPLAYSCRIPT: | 
        IMPORT_MCARD_AUTOINIT
        
      ENTEREDPARAMS: ~
      SCRIPT: | 
        '#include IMPORT_MCARD_AUTO
        
        Function import_Mcard_autoInit
        ' функция должна определить месяц, дату начала месяца, дату окончания,
        ' определить наличие касс, проверить, загружены ли данные по картам,
        ' если загружены - выйти, если нет - обновить информацию
        
        ' можно будет привязать сюда же апдейт карт согласно этим данным
          dim M, rY, bD, eD, KassPath, i, KassInt
          M = month(Now)
          Y = year(Now)
          bD = DateSerial(Y,M,01)
          eD = DateSerial(Y,M+1,01)-1
          
          for i=1 to 3
            select case i
              case 1
                KassPath = "192.168.1.91:D:\KKC\POSitive Cash\Database\CASH.FDB"
              case 2
                KassPath = "192.168.1.92:D:\KKC\POSitive Cash\Database\CASH.FDB"
              case 3
                KassPath = "192.168.1.93:D:\KKC\POSitive Cash\Database\CASH.FDB"
            end select
            KassInt = i
            
            call import_Mcard_Auto(null, KassPath, bD, eD, KassInt)
          next
        
        End Function
        
    Set: 
      - 
        Table: "RP_ADDITIONALFUNCTION"
        Items: 
          - 
            ADDFUNCTIONKEY: "157829244_1001777637 import_Mcard_Auto"
  - 
    Properties: 
      Class: "TgdcTemplate"
      RUID: 157829510_1001777637
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 157829473_1001777637
    Fields: 
      NAME: "Веб_инфо. Лог"
      DESCRIPTION: ~
      TEMPLATETYPE: "FR4"
      EDITIONDATE: 2018-04-23T09:21:47+03:00
      TEMPLATEDATA: | 
        <?xml version="1.0" encoding="utf-8"?>
        <Tgs_fr4SingleReport Version="4.15.13" DotMatrixReport="False" IniFile="\Software\Fast Reports" PreviewOptions.Buttons="4095" PreviewOptions.Zoom="1" PrintOptions.Printer="По умолчанию" PrintOptions.PrintOnSheet="0" ReportOptions.CreateDate="43213,3859216551" ReportOptions.Description.Text="" ReportOptions.LastChange="43213,3859216551" ScriptLanguage="PascalScript" ScriptText.Text="begin&#13;&#10;&#13;&#10;end." PropData="08446174617365747301010C1C00000020446174615365743D22512220446174615365744E616D653D2251220000095661726961626C65730100055374796C650100">
          <TfrxDataPage Name="Data" Height="1000" Left="0" Top="0" Width="1000"/>
          <TfrxReportPage Name="Page1" PaperWidth="215,9" PaperHeight="279,4" PaperSize="1" LeftMargin="10" RightMargin="10" TopMargin="10" BottomMargin="10" ColumnWidth="0" ColumnPositions.Text="" HGuides.Text="" VGuides.Text="">
            <TfrxReportTitle Name="ReportTitle1" Height="22,67718" Left="0" Top="18,89765" Width="740,409927">
              <TfrxMemoView Name="Memo1" Left="0" Top="0" Width="740,78788" Height="18,89765" ShowHint="False" Font.Charset="1" Font.Color="0" Font.Height="-13" Font.Name="Arial" Font.Style="1" HAlign="haCenter" ParentFont="False" Text="[Q.&#34;USR$COMPANY&#34;]"/>
            </TfrxReportTitle>
            <TfrxHeader Name="Header1" Height="22,67718" Left="0" Top="102,04731" Width="740,409927">
              <TfrxMemoView Name="Memo2" Left="3,77953" Top="3,77952999999999" Width="188,9765" Height="18,89765" ShowHint="False" Font.Charset="1" Font.Color="0" Font.Height="-13" Font.Name="Arial" Font.Style="1" Frame.Typ="15" HAlign="haCenter" ParentFont="False" Text="Р”Р°С‚Р° РёР·РјРµРЅРµРЅРёСЏ"/>
              <TfrxMemoView Name="Memo3" Left="192,75603" Top="3,77952999999999" Width="525,35467" Height="18,89765" ShowHint="False" Font.Charset="1" Font.Color="0" Font.Height="-13" Font.Name="Arial" Font.Style="1" Frame.Typ="15" HAlign="haCenter" ParentFont="False" Text="РРЅС„РѕСЂРјР°С†РёСЏ"/>
            </TfrxHeader>
            <TfrxMasterData Name="MasterData1" Height="18,89765" Left="0" Top="147,40167" Width="740,409927" ColumnWidth="0" ColumnGap="0" DataSetName="Q" RowCount="0" Stretched="True">
              <TfrxMemoView Name="Memo4" Left="3,77953" Top="0" Width="188,9765" Height="18,89765" ShowHint="False" StretchMode="smMaxHeight" Font.Charset="1" Font.Color="0" Font.Height="-13" Font.Name="Arial" Font.Style="0" Frame.Typ="15" ParentFont="False" Text="[Q.&#34;EDITIONDATE&#34;]"/>
              <TfrxMemoView Name="Memo5" Left="192,75603" Top="0" Width="525,35467" Height="18,89765" ShowHint="False" StretchMode="smMaxHeight" Font.Charset="1" Font.Color="0" Font.Height="-13" Font.Name="Arial" Font.Style="0" Frame.Typ="15" ParentFont="False" Text="[Q.&#34;USR$DATA&#34;]"/>
            </TfrxMasterData>
          </TfrxReportPage>
        </Tgs_fr4SingleReport>
        
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 157829474_1001777637
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 157829473_1001777637
    Fields: 
      NAME: "rp_Main157829474_1001777637"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "REPORTMAIN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2018-05-02T14:23:56+03:00
      DISPLAYSCRIPT: | 
        RP_MAIN157829474_1001777637
        
      ENTEREDPARAMS: ~
      SCRIPT: | 
        Option Explicit
        Function rp_Main157829474_1001777637
          BaseQueryList.Clear
        
          Dim q
          Set q = BaseQueryList.Query(BaseQueryList.Add("q", 0))
          q.SQL = "SELECT " & _
            "  Z.ID, " & _
            "  Z.EDITIONDATE, " & _
            "  Z.USR$DATA, " & _
            "  Z.USR$ISSENDER, " & _
            "  Z.USR$COMPANY " & _
            " " & _
            "FROM " & _
            "  USR$TEMP_WEBINFO Z " & _
            "WHERE coalesce(Z.USR$ISSENDER,0) = 0 " & _
            "ORDER BY Z.EDITIONDATE DESC "
            
          q.Open
          
          Set rp_Main157829474_1001777637 = BaseQueryList
        End Function
        
  - 
    Properties: 
      Class: "TgdcReportGroup"
      RUID: 155750490_1001777637
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 157829473_1001777637
    Fields: 
      PARENT: ~
      NAME: "TgdcUser"
      DESCRIPTION: ~
      USERGROUPNAME: "TGDCUSER"
      EDITIONDATE: 2017-11-28T11:23:31+03:00
  - 
    Properties: 
      Class: "TgdcReport"
      RUID: 157829473_1001777637
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "Веб_инфо"
      DESCRIPTION: ~
      DISPLAYINMENU: 1
      EVENTFORMULAKEY: ~
      FOLDERKEY: ~
      FRQREFRESH: 1
      GLOBALREPORTKEY: ~
      ISLOCALEXECUTE: 1
      ISREBUILD: 1
      MAINFORMULAKEY: "157829474_1001777637 rp_Main157829474_1001777637"
      MODALPREVIEW: 0
      PARAMFORMULAKEY: ~
      PREVIEW: 1
      REPORTGROUPKEY: "155750490_1001777637 TgdcUser"
      SERVERKEY: ~
      TEMPLATEKEY: "157829510_1001777637 Веб_инфо. Лог"
      EDITIONDATE: 2018-05-02T14:23:56+03:00