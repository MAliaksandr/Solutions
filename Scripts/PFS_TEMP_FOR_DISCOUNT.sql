CREATE OR ALTER PROCEDURE USR$PFS_DISCOUNT_BY_GROUP (
    MASTERKEY INTEGER,
    GROUPKEY INTEGER,
    DATEMIN DATE,
    DATEMAX DATE,
    TIMEMIN TIME,
    TIMEMAX TIME,
    STOP INTEGER)
RETURNS (
    QUANTITY NUMERIC(18, 3),
    SUMWITHDISCOUNT NUMERIC(18, 3),
    GOODKEY INTEGER)
 AS
 BEGIN
 /* UPDATE USR$PFS_TEMP_FOR_DISCOUNT cl
    SET cl.USR$STOP = 0
  WHERE cl.USR$  */

  FOR
    SELECT
      SUM(cl.USR$QUANTITY) AS Quantity,
      SUM(cl.USR$SUMWITHDISCOUNT) AS SumWithDiscount,
      g.ID
    FROM USR$PFS_TEMP_FOR_DISCOUNT cl
    JOIN GD_GOOD g ON g.ID = cl.USR$GOODKEY
    JOIN GD_GOODGROUP gr0 ON gr0.ID = g.GROUPKEY
    JOIN GD_GOODGROUP gr ON gr.LB <= gr0.LB AND gr.RB >= gr0.RB
    WHERE
      cl.USR$MASTERKEY = :MasterKey AND
      gr.ID = :GroupKey AND
      cl.USR$DATE >= :DateMin AND USR$DATE <= :DateMax AND
      cl.USR$TIME >= :TimeMin AND USR$TIME <= :TimeMax AND
      (COALESCE(cl.USR$STOP, 0) >= :Stop OR COALESCE(cl.USR$STOP, 0) = 0)
    GROUP BY 3
    INTO :Quantity, :SumWithDiscount, :Goodkey
  DO
    SUSPEND;
END
