%YAML 1.1
--- 
StructureVersion: "1.0"
Properties: 
  RUID: 154577947_1631104572
  Name: "Импорт из Excell по шаблону. Функции"
  Caption: "Импорт из Excell по шаблону. Функции"
  Version: "1.0.0.22"
  Optional: False
  Internal: True
  MD5: E4F90048FFCD55D973C53802C937723C
Uses: 
  - "154577854_1631104572 Импорт из Excell по шаблону. Таблицы"
Objects: 
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 154566998_1631104572
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "ImFF_TmplSetParams"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "CONST"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2023-03-16T13:56:00+03:00
      DISPLAYSCRIPT: ~
      ENTEREDPARAMS: ~
      SCRIPT: | 
        'Переменные для импорта из Excell на основании шаблонов
        public pGNAME
        public pVNAME      'ед.изм
        public pStartLine  'номер строки, с которой начинаем работу
        
        public pCOSTBYNCU
        public pVATPERC     ' ставка НДС
        public pVATSUM      ' сумма НДС
        public pDESCR       ' Описание
        public pBARCODE     ' ШК
        
        public pALIAS_end   ' определяет расположение ALIAS в строке
        public pBARCODE_end ' определяет расположение BARCODE в строке
        
        public pALIAS       '
        public pSELLCOST
        
        public pWorkSh     ' нумар ліста з дадзенымі
        public pWorkShN    ' назва ліста з дадзенымі
        
        public pCountry    ' страна происхождения
        public pDefCountry ' страна происхождения по умолчанию
        
        public pAndRecL    ' номер колонки, по которой будет проверяться конец файла
        public pQfreeLine  ' количество последовательно идущих пустых строк
        public pQuant      ' количество ТМЦ в позиции документа
        
        public pDocDate    ' дата документа
        public pDocNumb    ' номер документа
        public pDocNumbFile ' номер документа в имени файлв
        public pPath       ' рабочая директория
        public pDept       ' подразделение
        public pClient     ' клиент
        
        public pGroupKey   ' товарная группа, кот. будет использоваться по умолчанию при вставке нового товара
        
        public pSepar      ' разделитель для ШК/Артикула
        
        
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 154566984_1631104572
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "Imff_setParams"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2023-03-16T13:57:05+03:00
      DISPLAYSCRIPT: | 
        IMFF_SETPARAMS
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QFAAAAVEVNUEwFAAAAVEVNUEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVEZM
        UFI=
      SCRIPT: | 
        Function Imff_setParams(BYVal templ)
          'функция определяет массив глобальных переменных из заданного шаблона
          'примерно так:
          'наим.ТМЦ/ШК/артикул/цена покуп/%НДС/роз.цена/описание/
          '-------- так же нужно учесть определяется ли НОМЕР ЯЧЕЙКИ или НАЗВАНИЕ -> возвращаться будет число либо наимнование
          '-------------------------------------------------------
          '-------------------------------------------------------
          ' !!!!!!!! при добавлении новых параметров, их необходимо объявить в глоб переменных ImportTmplSetParams !!!!!!!!
          '-------------------------------------------------------
          '-------------------------------------------------------
        
          set Creator = New TCreator
          set gdcTemplParam = Creator.GetObject(nil, "TgdcAttrUserDefined", "")
          gdcTemplParam.SubType = "USR$IMPORTTEMPLATE"
          gdcTemplParam.ExtraConditions.Add("z.ID = :ID")
          gdcTemplParam.ParamByName("ID").AsInteger = templ(0)
          gdcTemplParam.Open
          gdcTemplParam.Last
        
          IF gdcTemplParam.RecordCount > 0 then
            'наименование ТМЦ
            pGNAME = gdcTemplParam.FieldByName("USR$GOODNAME").AsInteger
            'ед.изм
            pVNAME = gdcTemplParam.FieldByName("USR$VALUENAME").AsInteger
            'розн.цена
            pSELLCOST = gdcTemplParam.FieldByName("USR$SELLCOST").AsInteger
            'ШК
            pBARCODE = gdcTemplParam.FieldByName("USR$BARCODE").AsInteger
            '
            pBARCODE_end = gdcTemplParam.FieldByName("USR$BARCODE_END").AsInteger
            'код товара
            pALIAS = gdcTemplParam.FieldByName("USR$ALIAS").AsInteger
            
            pALIAS_end = gdcTemplParam.FieldByName("USR$ALIAS_END").AsInteger
            'покупная цена
            pCOSTBYNCU = gdcTemplParam.FieldByName("USR$COSTBYNCU").AsInteger
            'ставка НДС
            pVATPERC = gdcTemplParam.FieldByName("USR$VATPERC").AsInteger
            'сумма НДС
            pVATSUM = gdcTemplParam.FieldByName("USR$VATSUM").AsInteger
            'описание ТМЦ
            pDESCR = gdcTemplParam.FieldByName("USR$DESCRIPTION").AsInteger
            
            'номер строки, с которой начинаем работу
            pStartLine = gdcTemplParam.FieldByName("USR$STARTLINE").AsInteger
            ' номер колонки, по которой будет проверяться конец файла  = наименованию  ТМЦ
            pAndRecL = gdcTemplParam.FieldByName("USR$GOODNAME").AsInteger
            ' количество последовательно идущих пустых строк
            pQfreeLine = gdcTemplParam.FieldByName("USR$QFREELINE").AsInteger
            ' количество ТМЦ в позиции документа
            pQuant = gdcTemplParam.FieldByName("USR$QUANTITY").AsInteger
        
            
            'нумар ліста з дадзенымі, якія патрэбна апрацаваць
            pWorkSh = gdcTemplParam.FieldByName("USR$WKSHEETLIST").AsInteger
            
            'назва ліста з дадзенымі, якія патрэбна апрацаваць
            pWorkShN= gdcTemplParam.FieldByName("USR$WKSHEETLISTNAME").AsString
            
            ' товарная группа, кот. будет использоваться по умолчанию при вставке нового товара
            pGroupKey = gdcTemplParam.FieldByName("USR$GOODGROUP").AsInteger
            
            'краіна паходжання
            pCountry = gdcTemplParam.FieldByName("USR$COUNTRY").AsInteger
            pDefCountry = gdcTemplParam.FieldByName("USR$DEFCOUNTRY").AsInteger
            
            pDocDate = gdcTemplParam.FieldByName("USR$DOCDATE").AsInteger          ' дата документа
            pDocNumb = gdcTemplParam.FieldByName("USR$DOCNUMBER").AsInteger        ' номер документа
            
            pDocNumbFile = gdcTemplParam.FieldByName("USR$DOCNUMFILE").AsInteger    ' номер документа в имени файла
            
            pPath = gdcTemplParam.FieldByName("USR$PATH").AsString                 ' рабочая директория
            pDept = gdcTemplParam.FieldByName("USR$DEPARTMENT").AsInteger          ' подразделение
            pClient = gdcTemplParam.FieldByName("USR$CONTACT").AsInteger           ' клиент
            
            pSepar = gdcTemplParam.FieldByName("USR$SEPARATOR").AsString           ' разделитель
            
            if pQuant = 0 Then
              call Application.MessageBox("В шаблоне не задано поле для 'количества'" & vbCrLf & _
              "Возможны ошибки при импорте!", "Внимание", vbOkOnly + vbCritical + vbSystemModal)
            end if
          else
            call Application.MessageBox("Не указан шаблон", "Внимание", vbOkOnly + vbInformation + vbSystemModal)
          end if
          
          gdcTemplParam.Close
        End Function
        
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 154577838_1631104572
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "Imff_findgood"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2023-03-22T11:15:19+03:00
      DISPLAYSCRIPT: | 
        IMFF_FINDGOOD
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QFAAAASUJTUUwFAAAASUJTUUwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVFBS
        U1QCAAAAU0gCAAAAU0gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVFBSU1QFAAAAVEVNUEwF
        AAAAVEVNUEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVEZMUFI=
      SCRIPT: | 
        '#include IMFF_GETBARECODE
        'ф-я шукае ТМЦ у БД па розным крытэрыям.
        'паслядоўнасть пошуку будзе абазначана пазней
        'яна(ф-я) павінна венуць GOODKEY альбо знойдзенага альбо зноў устаўленнага
        'правяраем шаблён на ненулявые значенні
        Function Imff_findgood(ibSQL, Sh, templ)
          Imff_findgood = -1
        
          if pAlias<>0 and not isNull(pAlias) Then
            ibsql.Close
            ibsql.SQL.Text = _
            "SELECT " & _
            "  ID " & _
            "FROM GD_GOOD " & _
            "WHERE ALIAS =:ALIAS "
            ibsql.ParamByNAme("ALIAS").asString = LEFT(TRIM(Sh.Cells(pStartLine, pAlias).Value),16)
            ibsql.ExecQuery
        
            if not ibsql.EOF Then
              Imff_findgood = ibsql.FieldByName("ID").asInteger
              exit function
            end if
          end if
        
          IF pBarCode<>0 and not isNull(pBarCode) THEN
            'магчыма ШК будзе знаходзіцца у пачатку, або сярэдзіне, тады патрэна разкладаць увесь радок
            if pBARCODE_end =0 Then
              ' ДЛЯ ВИКТОРИИ ШК СТАЛ СТРОКОЙ НИЖЕ В НАИМЕНОВАНИИ
            '  if templ(0)= gdcBaseManager.GetIDByRUIDString("237832517_639165248") Then
        '        ByBarCode = Trim(Sh.Cells(pStartLine+1, pBarCode).Value)
        '      else
                ByBarCode = Trim(Sh.Cells(pStartLine, pBarCode).Value)
             ' end if
            else
             ' для высокий терем ШК находится в строке ниже, при этом в массиве проч. информации
             if templ(0)= gdcBaseManager.GetIDByRUIDString("239111336_639165248") Then
               ByBarCode = imff_GetBareCode(Sh.Cells(pStartLine +1, pBarCode).Value)
             else
               ByBarCode = imff_GetBareCode(Sh.Cells(pStartLine, pBarCode).Value)
             end if
            end if
            
            if Len(ByBarCode)>13 then ByBarCode = left(ByBarCode, 13)
        
            if templ(0)= gdcBaseManager.GetIDByRUIDString("235081136_1833050115") or _
              templ(0)= gdcBaseManager.GetIDByRUIDString("236605239_639165248") Then
              ByBarCode = Sh.Cells(pStartLine+2, pBarCode).Value
              dim arr
              if not isEmpty(ByBarCode) then
                arr = Split(ByBarCode)
                ByBarCode =arr(UBound(arr))
              end if
            end if
        
            If Len(ByBarCode) = 12 Then
              ibsql.SQL.Text = _
              "select g.id from gd_good g " & _
              " /*LEFT JOIN CALC_EAN13(:cod) ean13 ON 1=1*/ " & _
              "WHERE Left(g.BARCODE,12) = :cod " & _
              "   /*OR EAN13.BARCODE_EAN13 = g.BARCODE*/ "
              ibsql.Close
              ibsql.ParamByName("cod").AsString = ByBarCode
              ibsql.ExecQuery
        
              if not ibsql.eof then
               Imff_findgood = ibsql.FieldByName("ID").AsInteger
               Exit Function
              End If
            End If
        
          
            If Len(ByBarCode) = 7 Then
             ibsql.SQL.Text = _
             "select g.id from gd_good g " & _
             "LEFT JOIN CALC_EAN8(:cod) ean13 ON 1=1 " & _
             "WHERE Left(g.BARCODE,7) = :cod " & _
             "   OR EAN13.BARCODE_EAN8 = g.BARCODE "
             ibsql.Close
             ibsql.ParamByName("cod").AsString = ByBarCode
             ibsql.ExecQuery
             if not ibsql.eof then
               Imff_findgood = ibsql.FieldByName("ID").AsInteger
               Exit Function
             end If
            END IF
            
             ibsql.SQL.Text = _
             "select g.id from gd_good g " & _
             "WHERE g.BARCODE = :cod "
             ibsql.Close
             ibsql.ParamByName("cod").AsString = ByBarCode
             ibsql.ExecQuery
             if not ibsql.eof then
               Imff_findgood = ibsql.FieldByName("ID").AsInteger
               Exit Function
             end If
          END IF
        
             ibsql.SQL.Text = _
             "select g.id from gd_good g " & _
             "WHERE g.name = :gname "
             ibsql.Close
             ibsql.ParamByName("gname").AsString = Left(Sh.Cells(pStartLine, pGNAME).Value,60)
             ibsql.ExecQuery
        
             if not ibsql.eof then
               Imff_findgood = ibsql.FieldByName("ID").AsInteger
               Exit Function
             end If
        
             ' паколькі назвы ў файлу мб доўгія і іх змяшчаем у "апісанне", там пашукаем і па гэтаму полю
             ibsql.SQL.Text = _
             "select g.id from gd_good g " & _
             "WHERE g.description = :gname "
             ibsql.Close
             ibsql.ParamByName("gname").AsString = Left(Sh.Cells(pStartLine, pGNAME).Value, 180)
             ibsql.ExecQuery
        
             if not ibsql.eof then
               Imff_findgood = ibsql.FieldByName("ID").AsInteger
             end If
             
        End Function
        
        
    Set: 
      - 
        Table: "RP_ADDITIONALFUNCTION"
        Items: 
          - 
            ADDFUNCTIONKEY: "235086826_1833050115 Imff_GetBareCode"
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 154479221_1631104572
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "Imff_Excell"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2023-03-16T13:34:04+03:00
      DISPLAYSCRIPT: | 
        IMFF_EXCELL
        EXTRACLOSE
        ADDDOCHEADER
        GETDOCDATENUMBER
        MOVEFILE
        IMFF_EXCELL_ROLLBACK
        ANDRECORDS
        CORRECTLINE
        CORRECTVALUE
        RETTYPEVALUE
        ADDLINE2
        GETVATBYGOOD
        LEGALTYPEVALUE
        FINDCOUNTRY
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QJAAAAT1dORVJGT1JNCQAAAE9XTkVSRk9STQAAAAAAAAAAAAAAAAsAAAAAAAAAAAAA
        AABGTlNURkxQUg==
      SCRIPT: | 
        '#include IMFF_FINDGOOD
        '#include IMFF_SETPARAMS
        'Option Explicit
        Function Imff_Excell(OwnerForm)
          dim ParamList, ParamWindow, ParamIndex, depart, result , tempParam, templ
           ' Создание диалога
          set ParamWindow = System.GetNewParamWindow(0)
           ' Присвоим список параметров отдельной переменной
          set ParamList = ParamWindow.ParamList
           ' Добавление параметра через объект-диалог
        
          call ParamWindow.AddLinkParam("Шаблон", "prmLinkElement", "USR$IMPORTTEMPLATE", "id", "usr$NAME", "COALESCE(DISABLED,0)=0" , "", "Выбор типа лимита")
          ParamList.Params(0).Required = True
        
           ' Отображение диалога и получение результата
          result = ParamWindow.ExecuteWithParamList(ParamList)
          if IsEmpty(result) then
             exit Function
          end if
          
          templ = result(0)
          
          ' тут мы определяем индексы(ячейки) соответствующие нужным данным
          Imff_setParams(templ)
        
          dim Creator, OpenDialog, FileName
          set Creator = new TCreator
          set OpenDialog = Creator.GetObject(nil, "TOpenDialog", "")
          Dim gdcObject, gdcDetailObject, DS
        
          OpenDialog.Filter = "*.xls|*.xls*"
          OpenDialog.DefaultExt = "xls"
        
          if OpenDialog.Execute then
            FileName = OpenDialog.FileName
          else
            Exit function
          end if
        
         ''' выклікалася тут каб не чакаць апрацоўкі усіх дадзеных
         ''' call movefile(FileName)
          
          dim DateGoodHead, DateGoodLine, isCrDocument :isCrDocument =false
          set DateGoodHead = OwnerForm.FindComponent("gdcInvDocument")
          set DateGoodLine = OwnerForm.FindComponent("gdcInvDocumentLine")
        
          set gdcObject = OwnerForm.gdcObject
          if Assigned(DateGoodHead) Then
            set gdcDetailObject = OwnerForm.gdcDetailObject
            isCrDocument = true
          else
            set gdcDetailObject = OwnerForm.Documentline
          end if
          
          Dim Exc, Sh, Sh1
          Set Exc = CreateObject("Excel.Application")
          if not Assigned(Exc) then Exit function
          except Imff_Excell_Rollback(Exc)
        
          call Exc.Workbooks.Open(FileName)
        
          dim i, c  ,goodname,quantity,price
          c = 0
          ' проверка на непустые лісты в кніге
          for  i =1 to  Exc.Worksheets.count
            set Sh1 = Exc.Worksheets(i)
            '' праверка на патрэбны ліст
            if pWorkShN<>"" Then
              IF UCase(Sh1.Name)=UCase(pWorkShN) Then
               c = i
               exit for
              end if
            else
              if pWorkSh<>0 Then
                c = pWorkSh
                exit for
              end if
            end if
            c = i
          next
          if (c <> 0 ) then
            set  Sh = Exc.Worksheets(c)
        
            Dim prForm
            Set prForm = New Twg_ProgressForm
            Call prForm.Init(prForm, Null)
            prForm.Caption = "Импорт"
            prForm.Note = "Идет импорт накладной. Пожалуйста, подождите..."
            prForm.SubNote = ""
            prForm.Max = 30
            prForm.Show
        
        
            ' ствараем шапку дакумента
            if not AddDocHeader(gdcObject, Sh, FileName, isCrDocument) then
              call ExtraClose(Exc, prForm)
              exit function
            end if
            
            dim ibSQL,  gdcGood
            set ibSQL = Creator.GetObject(nil, "TIBSQL", "")
            ibSQL.Transaction = gdcObject.Transaction
            
            set gdcGood = Creator.GetObject(nil, "TgdcGood", "")
            DIM description
            description = ""
            r = pStartLine
           WHILE NOT andRecords(Sh, pStartLine)
             IF CorrectLine(Sh, pStartLine) and (Not prForm.Canceled) THEN
               Application.ProcessMessages
               call addLine2(ibSQL, Creator, gdcObject.Transaction, gdcDetailobject, Sh, templ)
               prForm.Position = prForm.Position + 1
             END IF
             pStartLine = pStartLine + 1
           WEND
          end if
        
          if gdcObject.Transaction.Active then
             gdcObject.Transaction.Commit
          end if
        
          ' зачыняем вокны і злучэнне
          call ExtraClose(Exc, prForm)
          
           ' перенесем обработанный файл в папку processed
          call movefile(FileName)
          
          if assigned(gdcObject) then gdcObject.CloseOpen
         ' gdcDetailObject.CloseOpen
        End Function
        
        ' зачыняе формы і аб'екты
        sub ExtraClose(Exc, frm)
          if Assigned(Exc) then
            Exc.Workbooks.Close
            set Exc = nothing
          end if
        
          if Assigned(frm) then
            frm.Close
            set frm = nothing
          end if
        end sub
        
        function AddDocHeader(gdcObject, ByVal Sh, ByVal FileName, isCrDocument)
           AddDocHeader = True
        
           dim DocDate, DocNumber, Res
           Res = GetDocDateNumber(FileName, Sh)
           DocDate =Res(1)
           DocNumber = Res(0)
        
            ' калі ствараем новы дакумент
          IF isCrDocument Then
            IF (isNull(pDept) or pDept=0)  or (isNull(pClient) or pClient=0) then
               call Application.MessageBox("Не заданы параметры Клиент/Подразделение в указанном шаблоне. Выполнение остановлено.", "Внимание", vOkOnly+vbSystemModal+vbCritical)
               AddDocHeader = false
               exit function
            end if
        
            if gdcObject.Transaction.Active then
               gdcObject.Transaction.Commit
            end if
            gdcObject.Transaction.StartTransaction
            gdcObject.Append
            gdcObject.FieldByname("DOCUMENTDATE").asDateTime = DocDate
            gdcObject.FieldByname("NUMBER").asString = DocNumber
            gdcObject.FieldByname("usr$deptkey").asInteger = pDept
            gdcObject.FieldByname("usr$contactkey").asInteger = pClient
            gdcObject.Post
        
          ELSE
            IF (not isNull(pDept) and pDept<>0)  and (not isNull(pClient) and pClient<>0) then
              if (gdcObject.FieldByname("usr$deptkey").asInteger <> pDept) or (gdcObject.FieldByname("usr$contactkey").asInteger <> pClient) then
                if Application.MessageBox("Один или несколько параметров в шапке документа не соответсвует параметрам шаблона. Подставить данные из шаблона?", "Внимание", vbYesNo+vbSystemModal+vbExclamation) = vbYes then
                  if (gdcObject.State<>dsEdit) or (gdcObject.State<>dsInsert) then
                    gdcObject.Edit
                    gdcObject.FieldByname("usr$deptkey").asInteger = pDept
                    gdcObject.FieldByname("usr$contactkey").asInteger = pClient
                    gdcObject.Post
                  end if
                end if
              end if
            end if
          END IF
        
          if ((gdcObject.FieldByname("usr$deptkey").isNull) or (gdcObject.FieldByname("usr$contactkey").isNull)) then
            call Application.MessageBox("Не заполнены обязательные поля в шапке документа", "Внимание", vbOkOnly+vbSystemModal+vbCritical)
              AddDocHeader = false
          end if
        end function
        
        function GetDocDateNumber(FName, Sh)
          dim result(1)
          ' нумар ў назвве файлу
          dim FSO, v, vl, fnumb, i
          if pDocNumbFile Then
        
            set FSO = CreateObject("Scripting.FileSystemObject")
            v = CSTR(fso.GetFileName(FName))
            vl = SPlit(v)
            for i = lBound(vl) to UBound(vl)
              if len(vl(i))>5 then
                fnumb = vl(i)
                exit for
              end if
            next
          else
          ' інакш нумар шукаем нумар у радку
           if pDocNumb<>0 Then
             for i=1 to 20
               v = Sh.Cells(pDocNumb, i).Value
               i=i+1
               if len(v)>5 Then
                 vl = SPlit(v)
                  for j = lBound(vl) to UBound(vl)
                    if len(vl(j))>5 then
                      fnumb = vl(j)
                      exit for
                    end if
                  next
               end if
             next
           end if
          end if
          if isEmpty(fnumb) then fnumb = "****"
          Result(0) =  fnumb
          Result(1)  = FormatDateTime(now,vbShortDate)
          GetDocDateNumber = Result
        end function
        
        sub movefile(FileName)
           dim F, FFname, FName, Exten
           set F = CreateObject("Scripting.FileSystemObject")
           '
           dim ParFolder
           ParFolder = f.GetParentFolderName(FileName) + "\processed\"
           dim FolderName
           FolderName = ParFolder + replace(formatdatetime(now,2),".","") + "\"
           ''on error resume next
        
            if not f.FolderExists(FolderName) then
              If not f.FolderExists(ParFolder) then f.CreateFolder(ParFolder)
              f.CreateFolder(FolderName)
            else
              if not f.FolderExists(FolderName) Then
                f.CreateFolder(FolderName)
              end if
            end if
        
            dim CurrentTime
            FName = f.GetFileName(FileName)
            FFname = FName
            Exten = f.GetExtensionName(FileName)
            CurrentTime = Replace(CSTR(FormatDateTime(now, vbshortTime)),":","")
            Fname = LEFT(FName, len(FName) - len(Exten)-1) + "-" + CurrentTime + "." + Exten
            
            if f.fileExists(FolderName + f.GetFileName(FileName))  then FileName = Fname
            
            call f.MoveFile(FFname, FolderName + f.GetFileName(FileName))
           '' on error goto 0
           set f = nothing
         
        end sub
        
        ' откат при ошибке
        Sub Imff_Excell_Rollback(Exc)
          if Assigned(Exc) then Exc.Workbooks.Close
          set Exc = nothing
        End sub
        
          ' конец файла по третьей колонке?
          ' нужно учесть, с какой строки по шаблону начинаются данные
          ' pQfreeLine колічество пустых строк
        function andRecords(Sh, r)
          andRecords = false
             res = 0
             For i = r to pQfreeLine + r
               if Sh.Cells(i, pAndRecL).Value = "" Then
                 res = res + 1
               end if
             next
             
             if res = pQfreeLine and r = pAndRecL then
                call Application.MessageBox("Неожиданный конец файла. " & vbCrLf & "Выполнение будет остановлено! " & vbCrLf & _
                   "Текущее значение параметра проверки столбца: " & CSTR(pAndRecL) & vbCrLf & _
                   "Измените параметры в шаблоне и повторите попытку!", "Внимание", vbOkOnly + vbExclamation + vbSystemModal)
                   andRecords = true
             elseif res = pQfreeLine + 1  and r > pAndRecL Then
                call Application.MessageBox("Достигнут конец файла с данными. " & vbCrLf & _
                   "Операция успешно завершена", "Внимание", vbOkOnly + vbExclamation + vbSystemModal)
                   andRecords = true
             end if
          
             ' if Sh.Cells(r, pAndRecL).Value = "" and _
        '         Sh.Cells(r+1, pAndRecL).Value  = "" and _
        '         Sh.Cells(r+2, pAndRecL).Value = "" Then
        '         call Application.MessageBox("Неожиданный конец файла. " & vbCrLf & "Выполнение будет остановлено! " & vbCrLf & _
        '         "Текущее значение параметра проверки столбца: " & CSTR(pAndRecL) & vbCrLf & _
        '         "Измените параметры в шаблоне и повторите попытку!", "Внимание", vbOkOnly + vbExclamation + vbSystemModal)
        '       andRecords = true
        '      end if
        end function
        
        ' здесь же проверим корректность данных, на случай если в файле лишь бы что идет
        function CorrectLine(Sh, r)
           CorrectLine = true
        
             ' покупная цена не строка и не 0 (в параметрах шаблона указана)
             if not correctvalue(Sh.Cells(r, pCostByNCU).Value) then CorrectLine = False
             
             ' количество не строка и не 0 (в параметрах шаблона указана)
             if not correctvalue(Sh.Cells(r, pQuant).Value) then CorrectLine = False
             
             ' наименование ТМЦ не менее 3 символов
             IF Sh.Cells(r, pGNAME).Value <> "" and LEN(Sh.Cells(r, pGNAME).Value)<=3 Then CorrectLine = false
             
        end function
        
        
        function correctvalue(v)
          correctvalue = True
          on error resume next
          v = CCUR(Replace(v,".",","))
          if err.number <> 0 then
            correctvalue = false
            on error goto 0
          end if
        end function
        
        'vtype - тое, што патрэна вяртяць
        '1- лічба, 2- літары
        function RetTypeValue(v, vtype)
          RetTypeValue = v
          select case vtype
            case 1
              if TypeName(v)= "String" then
                v = Trim(v)
                v = Replace(v,";","")
                v = Replace(v,"/","")
                v = CCUR(Replace(v,".",","))
              end if
            case 2
              v = CSTR(v)
            case else
          end select
          RetTypeValue = v
        end function
        
        
        ' функция вставки позиций
        sub addLine2(ibSQL, Creator, tr, gdcDetailobject, Sh, templ)
        
          goodname = Trim(Sh.Cells(pStartLine, pGNAME).Value)
          quantity = cstr(Sh.Cells(pStartLine, 2).Value)
          price =  Replace(Sh.Cells(pStartLine, pCostByNCU).Value, "'", "")
        
          dim gdcGood
          set gdcGood = Creator.GetObject(nil, "TgdcGood", "")
          gdcGood.Transaction = Tr
          gdcGood.Open
          
        
          dim BookMark , goodkey, garr
          redim garr(2)
          garr(0) = goodname
          garr(1) =quantity
          garr(2) = price
        
         ' goodkey = findGood(Creator, tr, goodname)
          
          goodkey = Imff_findgood(ibSQL, Sh, templ)
          
          Dim stAlias: stAlias =""
          Dim stBarcode: stBarcode =""
          Dim stDescr: stDescr = ""
        
          ibSQL.Close
          ibSQL.SQL.Text = _
            "SELECT FIRST(1) " & _
            " ID " & _
            "FROM GD_VALUE V " & _
            "WHERE UPPER(V.NAME) LIKE UPPER(:VNAME) || '%' "
          
          ' калі не знайшлі, патрэбна стварыць
          if goodkey < 0 then
            if pAlias<>0 Then
              stAlias = LegalTypeValue(Sh.Cells(pStartLine, pAlias).Value, 2)
            end if
            if pBarcode<>0 Then
              if pBARCODE_end = 0 then
                stBarcode = LegalTypeValue(Sh.Cells(pStartLine, pBarcode).Value,2)
              else
                 if templ(0)= gdcBaseManager.GetIDByRUIDString("239111336_639165248") Then
                   stBarcode = imff_GetBareCode(Sh.Cells(pStartLine +1, pBarCode).Value)
                 else
                   stBarcode = imff_GetBareCode(Sh.Cells(pStartLine, pBarCode).Value)
                   goodname = Replace(goodname,stBarcode,"")
                 end if
              end if
              
              if templ(0)= gdcBaseManager.GetIDByRUIDString("235081136_1833050115") Then
                stBarcode = Sh.Cells(pStartLine+2, pBarCode).Value
                dim arr
                arr = Split(stBarcode)
                stBarcode =arr(UBound(arr))
              end if
        
            end if
            if pDescr<>0 and not isNull(pDescr) Then
              stDescr = LegalTypeValue(Sh.Cells(pStartLine, pDescr).Value, 1)
            else
              stDescr = Trim(Sh.Cells(pStartLine, pGNAME).Value)
            end if
        
           if pVNAME <>0 Then
             ibSQL.Close
             ibSQL.ParamBYName("VNAME").asString  =  LegalTypeValue(Sh.Cells(pStartLine, pVNAME).Value, 2)
             ibSQL.ExecQuery
             if not ibSQL.EOF Then
               valuekey = ibSQL.FieldBYName("ID").asInteger
             else
               valuekey = gdcBaseManager.GetIDByRUIDString("147028905_285908973")
             end if
           else
             valuekey = gdcBaseManager.GetIDByRUIDString("147028905_285908973")
           end if
           
          ' if stDescr = 0 Then
        '
        '   end if
          
           gdcGood.Insert
           gdcGood.FieldByName("alias").AsString = stAlias
           gdcGood.FieldByName("name").AsString = goodname        'Trim(Sh.Cells(pStartLine, pGNAME).Value)
           gdcGood.FieldByName("BARCODE").AsString = stBarcode
           gdcGood.FieldByName("groupkey").AsString =  pGroupKey  ''''''''''
           gdcGood.FieldByName("valuekey").AsString = valuekey    '''''''''''
          ' gdcGood.FieldByName("description").AsString = stDescr
           gdcGood.Post
           gdcDetailObject.Transaction.CommitRetaining
           goodkey = gdcGood.Id
           '  tf.WriteLine("Добавлен товар: " & Trim(Exc.ActiveSheet.Cells(i,4).Value) & "")
           'else
           '  goodkey = ibsql.FieldByName("ID").AsInteger
          end if
          
           dim LineNumb
           ibSQL.Close
           ibSQL.SQL.Text = _
           "SELECT max(USR$NUMORDER) as NUM FROM USR$INV_ADDWBILLLINE WHERE MASTERKEY = :MASTERKEY "
           ibSQL.ParamBYName("MASTERKEY").asInteger = gdcDetailObject.MasterSource.DataSet.FieldByName("ID").AsInteger
           ibSQL.ExecQuery
           LineNumb = ibSQL.FieldByName("NUM").asInteger + 1
         
          gdcDetailObject.DisableControls
          BookMark = gdcDetailObject.GetBookMark
          gdcDetailobject.Append
          gdcDetailObject.FieldbyName("goodkey").AsInteger = goodkey
          gdcDetailObject.FieldbyName("USR$NUMORDER").AsInteger = LineNumb
          gdcDetailObject.FieldbyName("quantity").asCurrency = Sh.Cells(pStartLine, pQuant).Value
        
          gdcDetailObject.FieldbyName("TO_USR$INV_COSTPROVIDER").asCurrency  = RetTypeValue(Sh.Cells(pStartLine, pCostByNCU).Value, 1)
          gdcDetailObject.FieldbyName("TO_USR$INV_COSTBUYNCU").asCurrency  = RetTypeValue(Sh.Cells(pStartLine, pCostByNCU).Value, 1)
        
          Vat = getVatByGood(ibSQL,Sh, goodkey)
          gdcDetailObject.FieldbyName("TO_USR$INV_ADDNDS").asVariant  = Vat
        
          ' краіна паходжання
          if pCountry<>0 then
            gdcDetailObject.FieldbyName("TO_USR$INV_ORIGINCOUNTRYKEY").asVariant = findCountry(ibSQL, Sh)
          else
            if pDefCountry<>0 then
              gdcDetailObject.FieldbyName("TO_USR$INV_ORIGINCOUNTRYKEY").asVariant = pDefCountry
            end if
          end if
          
          'если организация НЕ ПЛАТЕЛЬЩИК НДС
          if not InvOptions.NDSDodger Then
            gdcDetailObject.FieldbyName("TO_USR$INV_SELLNDS").asVariant  = Vat
          end if
         ' gdcDetailObject.FieldbyName("TO_USR$INV_COSTRETAILNCU").asCurrency  = Sh.Cells(pStartLine, pSellCost).Value
          gdcDetailObject.Post
          gdcDetailObject.GotoBookMark(BookMark)
          gdcDetailObject.EnableControls
          gdcDetailObject.cLOSEoPEN
        end sub
        
        'вяртае лічбу НДС
        function getVatByGood(ibSQL,Sh, gk)
          Vat = null
          ' спачатку глядзім у ліст з дадзенымі
          if pVatPerc<>0 Then
            Vat = Left(Sh.Cells(pStartLine, pVatPerc).Value,2)
            IF isNumeric(Vat) Then
              Vat = CINT(Vat)
            else
              Vat = null
            end if
        
          else
            ibSQL.Close
            ibSQL.SQL.Text = _
            "Select first(1) " & _
            "gt.RATE " & _
            "from GD_GOODTAX gt " & _
            "left join GD_TAX t on t.ID = gt.TAXKEY " & _
            "where gt.TAXKEY = <RUID xID=""147065078"" DBID=""486813904""/> and " & _
            "gt.GOODKEY = :gk " & _
            "order by gt.DATETAX desc "
            ibSQL.ParamByName("gk").asInteger = gk
            ibSQL.ExecQuery
            if not ibSQL.EOF then
              Vat = ibSQL.FieldByName("RATE").asVariant
            else
              ibSQL.Close
              ibSQL.SQL.Text =_
              "INSERT INTO GD_GOODTAX(DATETAX,GOODKEY,RATE, TAXKEY) " & _
              "VALUES(CURRENT_DATE, :GK, 20, <RUID xID=""147065078"" DBID=""486813904""/>) "
              ibSQL.ParamByName("gk").asInteger = gk
              ibSQL.ExecQuery
              Vat = 20
            end if
          end if
          getVatByGood = Vat
        end function
        
        ' прымае некае значэнне і вяртае яго з улікам абпрацоўкі
        ' 0 - лічба
        ' 1 - радок
        ' 2 - радок з аксутнічючымі ".", "," , ":", ";"
        function LegalTypeValue(vl,vType)
          select case vType
            case 0
              vl = Replace(vl, "'","")
            case else
              vl = Trim(vl)
              vl = Replace(vl, ",","")
              vl = Replace(vl, ".","")
              vl = Replace(vl, ":","")
              vl = Replace(vl, ";","")
          end select
          LegalTypeValue =vl
        end function
        
        function findCountry(ibSQL, Sh)
          findCountry = null
          IF pCountry <> 0 Then
           ibSQL.Close
           ibSQL.SQL.Text = _
           "SELECT FIRST(1) ID FROM GD_PLACE WHERE PLACETYPE = 'Страна' AND UPPER(NAME) = UPPER(:COUNTRY)"
           ibSQL.ParamByName("COUNTRY").asString = Trim(Sh.Cells(pStartLine, pCountry).Value)
           ibSQL.ExecQuery
           if not ibSQL.EOF Then
             findCountry = ibSQL.FieldByName("ID").asInteger
           else
             if not isNull(pDefCountry) Then
               findCountry = pDefCountry
             end if
           end if
         else
           if not isNull(pDefCountry) Then
             findCountry = pDefCountry
           end if
         End if
        end function
        
        
        
        
    Set: 
      - 
        Table: "RP_ADDITIONALFUNCTION"
        Items: 
          - 
            ADDFUNCTIONKEY: "154577838_1631104572 Imff_findgood"
          - 
            ADDFUNCTIONKEY: "154566984_1631104572 Imff_setParams"
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 235086826_1833050115
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "Imff_GetBareCode"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2023-03-16T14:11:17+03:00
      DISPLAYSCRIPT: | 
        IMFF_GETBARECODE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QCAAAAVkwCAAAAVkwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVEZMUFI=
      SCRIPT: | 
        Option Explicit
        ' вылучае з радку BarCode
        Function Imff_GetBareCode(vl)
          imff_GetBareCode = ""
          ' пазбаўляемся ад іншых сымболаў
          dim arr, i
          if pSepar<>""Then
            vl = Trim(vl)
            arr = Split(vl,pSepar)
          else
            vl = Trim(vl)
            vl = replace(vl,",","")
            vl = replace(vl,"-","")
            vl = replace(vl,".","")
            vl = replace(vl,"/","")
            vl = replace(vl,";","")
            vl = replace(vl,":"," ")
            arr = Split(vl)
          end if
        
          'калі ШК знаходзіцца разам з назвай матэрыяльная каштоўнасці
          if pBARCODE_end = 1 Then
            for i=0 to UBound(arr)
              if len(arr(i)) = 13 and IsNumeric(arr(i)) Then
                 Imff_GetBareCode = arr(i)
                 exit for
              end if
            next
          else
           ' лічам, што нама чаго шукаць
          Imff_GetBareCode = vl
          end if
        End Function
        