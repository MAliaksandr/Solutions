%YAML 1.1
--- 
StructureVersion: "1.0"
Properties: 
  RUID: 277799957_1431326289
  Name: "Import_zn_fromexcell"
  Caption: "Import_into_zn_fr_excel"
  Version: "1.0.0.5"
  Optional: False
  Internal: True
  MD5: 61C03D0BF3164144FFED450D52AE829D
Uses: 
  - "147093152_1892754951 GS.Общепит.back - Хранилище"
Objects: 
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 277799715_1431326289
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "tb_import_fromExcell"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-04-14T13:39:25+03:00
      DISPLAYSCRIPT: | 
        TB_IMPORT_FROMEXCELL
        TB_IMPORT_FROMEXCELL_EXCEPT
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QJAAAAT1dORVJGT1JNCQAAAE9XTkVSRk9STQAAAAAAAAAAAAAAAAsAAAAAAAAAAAAA
        AABGTlNURkxQUg==
      SCRIPT: | 
        Option Explicit
        Function tb_import_fromExcell(OwnerForm)
        
          Dim Creator, TDialog, Excel, Sheet, Start
          Set Creator = New TCreator
          
          dim MagSynch
          set MagSynch = new Tvb_MagSynch
          
          dim Dep
          ' Dep = MagSynch.GetDeptkey("ЦХ01065")
          ' CopyFilePath = MagSynch.GetFCopyPath("ЦХ01065")
          ' isMove = MagSynch.GetMoveFile("ЦХ01065")
          
          dim gdcObject,  gdcDetailObject, dt, deptkey
          set gdcObject = OwnerForm.gdcObject
          dt = gdcObject.FieldByName("documenttypekey").asInteger
        
          ' накладная на получение товара или заказ наряд
          if dt = gdcBaseManager.GetIDByRuidString("147010993_109092844") Then
            set gdcDetailObject = OwnerForm.FindComponent("FTopDataSource").DataSet
            deptkey = gdcObject.FieldByName("USR$DEPTKEY").asInteger
          else
            set gdcDetailObject = OwnerForm.gdcDetailObject
            deptkey = gdcObject.FieldByName("USR$DEPOTKEY").asInteger
          end if
          
          
          Set TDialog = Creator.GetObject(Null, "TOpenDialog", "")
          
          IF deptkey >0 and not isNull(MagSynch.GetDirByDept(deptkey)) THEN
            TDialog.InitialDir = MagSynch.GetDirByDept(deptkey)
          END IF
        
          TDialog.Filter = "*.xls|*.xls"
          TDialog.DefaultExt = "xls"
          If Not TDialog.Execute Then Exit Function
          
          
          Set Excel = CreateObject("Excel.Application")
          Call Excel.Workbooks.Open(TDialog.FileName)
          Set Sheet = Excel.Application.ActiveSheet
        
          'посчитаем число строк
          dim i, records
          i = 2
          records = 0
          WHILE Excel.ActiveSheet.Cells(i, 1).Value <> ""
            records = records + 1
            i = i + 1
          wend
          
          if i<=1 Then
            call Application.MessageBox("Файл не содержит записей для импорта!" + VbLF  + _
              "Загрузка прервана.", "Внимание", vbOkOnly + vbSystemMOdal +vbExclamation)
             Excel.Quit
             Set Excel = Nothing
            exit function
          end if
          
          dim DocNumb, DocDate, Dept, MagCode
          ' получим данные для шапки документа с 1 записи данных
          DocNumb = Excel.ActiveSheet.Cells(2, 7).Value
          DocDate = Excel.ActiveSheet.Cells(2, 8).Value
          MagCode = Excel.ActiveSheet.Cells(2, 6).Value
          
          'Обновим данные шапки документа
          if gdcObject.State = dsInsert or gdcObject.State = dsEdit Then
             gdcObject.FieldByName("Documentdate").asDateTime = DocDate
             gdcObject.FieldByName("Number").asString = DocNumb
          end if
          
          dim frmPr
          Set frmPr = new Tvb_ren_frmProgressBar
          frmPr.Caption = "Идёт загрузка."
          frmPr.Note = "Подождите пожалуйста..."
          frmPr.Step = 1
          frmPr.Smooth = True
          frmPr.Min = 0
          frmPr.Max = records
        
          Except tb_import_fromExcell_Except(frmPr, Excel)
          
          if deptkey <> MagSynch.GetDeptKey(MagCode) Then
             call Application.MessageBox("Файл не предназначен для выбранного подразделения." + VbLF  + _
              "Проверьте <Параметры связи> для данного подразделения. " + VbLF  + _
              "Загрузка прервана.", "Внимание", vbOkOnly + vbSystemMOdal +vbExclamation)
             Excel.Quit
             Set Excel = Nothing
             frmPr.Close
             Set frmPr = Nothing
            exit function
          end if
          
          dim ibSQL
          set ibsql = Creator.GetObject(NULL, "TIBSQL", "")
          ibsql.Transaction = gdcBaseManager.ReadTransaction
            if dt <> gdcBaseManager.GetIDByRuidString("147010993_109092844") Then
              ibsql.SQL.Text = _
              "SELECT FIRST(1) " & _
              "G.iD AS GOODKEY, " & _
              "R.DOCUMENTKEY " & _
              "FROM GD_GOOD G " & _
              "LEFT JOIN USR$MN_RECEIPT R ON R.USR$GOODKEY = G.ID " & _
              "JOIN GD_DOCUMENT D ON D.ID = R.DOCUMENTKEY " & _
              "WHERE G.BARCODE =:BARCODE " & _
              "AND R.USR$DEPOTKEY = :DEPT " & _
              "ORDER BY D.DOCUMENTDATE DESC "
            else
              ibsql.SQL.Text = _
              "SELECT FIRST(1) " & _
              "g.ID as GOODKEY " & _
              "FROM GD_GOOD G " & _
              "where g.BARCODE =:barcode " & _
              "or EXISTS( " & _
              "  SELECT " & _
              "    GB.ID " & _
              "  FROM GD_GOODBARCODE GB " & _
              "  WHERE GB.GOODKEY = G.ID AND GB.BARCODE = :BarCode) "
            end if
        
        
          dim ErrList
          set ErrList = Creator.GetObject(nil, "TStringList", "")
          ErrList.Add("Описание ошибок при импорте из Excell: ")
        
          dim Log
          Set Log = CreateObject("WScript.Shell")
        
          Dim fso
          Set fso = CreateObject("Scripting.FileSystemObject")
          
        
          frmPr.Show
          dim Cost, BarCode, Quant, errK
          errK=0
          i=2
          WHILE Excel.ActiveSheet.Cells(i, 1).Value <> ""
           frmPr.Note = "Подождите пожалуйста..." + VbCr + _
                       " Обработано " + Cstr(frmPr.Position) + " записей " + " из " + Cstr(frmPr.Max)
           frmPr.Position = i-1
           Application.ProcessMessages
           
           BarCode = Excel.ActiveSheet.Cells(i, 47).Value
           Quant = Excel.ActiveSheet.Cells(i, 9).Value
           Cost = Excel.ActiveSheet.Cells(i, 13).Value
        
           if Cost<>0 and BarCode<>"" then
             IBSQL.CLOSE
             IBSQL.ParamBYName("BARCODE").asVariant = BarCode
             if dt <> gdcBaseManager.GetIDByRuidString("147010993_109092844") Then
               IBSQL.ParamBYName("DEPT").asVariant = deptkey
             end if
             IBSQL.EXECQUERY
        
             IF IBSQL.eof THEN
               errK = errK + 1
               ErrList.Add("Позиция со ШК: " + BarCode + " не найден на данном подразделении.")
             END IF
        
             IF not IBSQL.eof THEN
               gdcDetailObject.Append
               if dt <> gdcBaseManager.GetIDByRuidString("147010993_109092844") Then
                 gdcDetailObject.FieldByName("USR$RECEIPTKEY").AsInteger =  ibsql.FieldByName("DOCUMENTKEY").AsInteger
                 gdcDetailObject.FieldByName("USR$GOODKEY").AsInteger = ibsql.FieldByName("GOODKEY").AsInteger
                 gdcDetailObject.FieldByName("USR$QUANTITY").AsCurrency = Quant
                 gdcDetailObject.FieldByName("USR$SELLCOST").AsCurrency = Cost
               else
                 gdcDetailObject.FieldByName("GOODKEY").AsInteger = ibsql.FieldByName("GOODKEY").AsInteger
                 gdcDetailObject.FieldByName("QUANTITY").AsCurrency = Quant
                 gdcDetailObject.FieldByName("TO_USR$INV_COSTPROVIDER").AsCurrency = Cost
               end if
               gdcDetailObject.Post
             END IF
           end if
        
          i=i+1
          WEND
        
          frmPr.Close
          call Application.MessageBox("Импорт завершен!","Внимание!",vbOkOnly+vbInformation+vbSystemMOdal)
              OwnerForm.ReFresh
        
          dim logFile
          LogFile = MagSynch.GetLogPath(MagCode) + "log" + fso.getbasename(TDialog.FileName) + ".txt"
            if ErrList.Count > 1 then
              ErrList.Add("Всего не найдено: " + CSTR(errK) + " из: " + CSTR(records) + " записей")
              ErrList.SaveToFile(LogFile)
              IF Application.MessageBox("Список не найденных позиций сохранен в файле D:\import.txt. Открыть для просмотра?","Внимание", _
                vbYesNo + vbExclamation+vbSystemModal)= vbYes then
                  Log.Run("notepad " + LogFile)
              END IF
            end if
        
        
          Excel.Quit
          Set Excel = Nothing
        
         ' переместим в обработанные, если нужно
          if MagSynch.GetMoveFile(MagCode) then
            FSO.MoveFile TDialog.FileName, MagSynch.GetFCopyPath(MagCode)
          end if
        End Function
        
        SUB tb_import_fromExcell_Except(prForm, Excel)
          prForm.Close
          Set prForm = Nothing
          Excel.Quit
          Set Excel = Nothing
        end sub
        